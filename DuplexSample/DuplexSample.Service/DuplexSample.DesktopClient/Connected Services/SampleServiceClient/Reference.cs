//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DuplexSample.DesktopClient.SampleServiceClient {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OperationResultOfboolean", Namespace="http://schemas.datacontract.org/2004/07/DuplexSample.Service")]
    [System.SerializableAttribute()]
    public partial class OperationResultOfboolean : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsSuccessField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSuccess {
            get {
                return this.IsSuccessField;
            }
            set {
                if ((this.IsSuccessField.Equals(value) != true)) {
                    this.IsSuccessField = value;
                    this.RaisePropertyChanged("IsSuccess");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Value {
            get {
                return this.ValueField;
            }
            set {
                if ((this.ValueField.Equals(value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OperationResultOfArrayOfProductYbTTycpx", Namespace="http://schemas.datacontract.org/2004/07/DuplexSample.Service")]
    [System.SerializableAttribute()]
    public partial class OperationResultOfArrayOfProductYbTTycpx : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsSuccessField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private DuplexSample.DesktopClient.SampleServiceClient.Product[] ValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSuccess {
            get {
                return this.IsSuccessField;
            }
            set {
                if ((this.IsSuccessField.Equals(value) != true)) {
                    this.IsSuccessField = value;
                    this.RaisePropertyChanged("IsSuccess");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public DuplexSample.DesktopClient.SampleServiceClient.Product[] Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Product", Namespace="http://schemas.datacontract.org/2004/07/DuplexSample.Service")]
    [System.SerializableAttribute()]
    public partial class Product : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OperationResultOfProductYbTTycpx", Namespace="http://schemas.datacontract.org/2004/07/DuplexSample.Service")]
    [System.SerializableAttribute()]
    public partial class OperationResultOfProductYbTTycpx : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsSuccessField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private DuplexSample.DesktopClient.SampleServiceClient.Product ValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSuccess {
            get {
                return this.IsSuccessField;
            }
            set {
                if ((this.IsSuccessField.Equals(value) != true)) {
                    this.IsSuccessField = value;
                    this.RaisePropertyChanged("IsSuccess");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public DuplexSample.DesktopClient.SampleServiceClient.Product Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://www.acme.com/api", ConfigurationName="SampleServiceClient.ISampleService", CallbackContract=typeof(DuplexSample.DesktopClient.SampleServiceClient.ISampleServiceCallback), SessionMode=System.ServiceModel.SessionMode.Required)]
    public interface ISampleService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.acme.com/api/ISampleService/Login", ReplyAction="http://www.acme.com/api/ISampleService/LoginResponse")]
        DuplexSample.DesktopClient.SampleServiceClient.OperationResultOfboolean Login(string userName, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.acme.com/api/ISampleService/Login", ReplyAction="http://www.acme.com/api/ISampleService/LoginResponse")]
        System.Threading.Tasks.Task<DuplexSample.DesktopClient.SampleServiceClient.OperationResultOfboolean> LoginAsync(string userName, string password);
        
        [System.ServiceModel.OperationContractAttribute(IsTerminating=true, IsInitiating=false, Action="http://www.acme.com/api/ISampleService/Logout", ReplyAction="http://www.acme.com/api/ISampleService/LogoutResponse")]
        void Logout();
        
        [System.ServiceModel.OperationContractAttribute(IsTerminating=true, IsInitiating=false, Action="http://www.acme.com/api/ISampleService/Logout", ReplyAction="http://www.acme.com/api/ISampleService/LogoutResponse")]
        System.Threading.Tasks.Task LogoutAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.acme.com/api/ISampleService/GetAllProducts", ReplyAction="http://www.acme.com/api/ISampleService/GetAllProductsResponse")]
        DuplexSample.DesktopClient.SampleServiceClient.OperationResultOfArrayOfProductYbTTycpx GetAllProducts();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.acme.com/api/ISampleService/GetAllProducts", ReplyAction="http://www.acme.com/api/ISampleService/GetAllProductsResponse")]
        System.Threading.Tasks.Task<DuplexSample.DesktopClient.SampleServiceClient.OperationResultOfArrayOfProductYbTTycpx> GetAllProductsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.acme.com/api/ISampleService/GetProduct", ReplyAction="http://www.acme.com/api/ISampleService/GetProductResponse")]
        DuplexSample.DesktopClient.SampleServiceClient.OperationResultOfProductYbTTycpx GetProduct(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.acme.com/api/ISampleService/GetProduct", ReplyAction="http://www.acme.com/api/ISampleService/GetProductResponse")]
        System.Threading.Tasks.Task<DuplexSample.DesktopClient.SampleServiceClient.OperationResultOfProductYbTTycpx> GetProductAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.acme.com/api/ISampleService/AddProduct", ReplyAction="http://www.acme.com/api/ISampleService/AddProductResponse")]
        DuplexSample.DesktopClient.SampleServiceClient.OperationResultOfProductYbTTycpx AddProduct(DuplexSample.DesktopClient.SampleServiceClient.Product product);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.acme.com/api/ISampleService/AddProduct", ReplyAction="http://www.acme.com/api/ISampleService/AddProductResponse")]
        System.Threading.Tasks.Task<DuplexSample.DesktopClient.SampleServiceClient.OperationResultOfProductYbTTycpx> AddProductAsync(DuplexSample.DesktopClient.SampleServiceClient.Product product);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.acme.com/api/ISampleService/UpdateProduct", ReplyAction="http://www.acme.com/api/ISampleService/UpdateProductResponse")]
        DuplexSample.DesktopClient.SampleServiceClient.OperationResultOfProductYbTTycpx UpdateProduct(DuplexSample.DesktopClient.SampleServiceClient.Product product);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.acme.com/api/ISampleService/UpdateProduct", ReplyAction="http://www.acme.com/api/ISampleService/UpdateProductResponse")]
        System.Threading.Tasks.Task<DuplexSample.DesktopClient.SampleServiceClient.OperationResultOfProductYbTTycpx> UpdateProductAsync(DuplexSample.DesktopClient.SampleServiceClient.Product product);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.acme.com/api/ISampleService/RemoveProduct", ReplyAction="http://www.acme.com/api/ISampleService/RemoveProductResponse")]
        DuplexSample.DesktopClient.SampleServiceClient.OperationResultOfboolean RemoveProduct(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.acme.com/api/ISampleService/RemoveProduct", ReplyAction="http://www.acme.com/api/ISampleService/RemoveProductResponse")]
        System.Threading.Tasks.Task<DuplexSample.DesktopClient.SampleServiceClient.OperationResultOfboolean> RemoveProductAsync(int id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISampleServiceCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://www.acme.com/api/ISampleService/OnProductAdded")]
        void OnProductAdded(int id);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://www.acme.com/api/ISampleService/OnProductUpdated")]
        void OnProductUpdated(int id);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://www.acme.com/api/ISampleService/OnProductDeleted")]
        void OnProductDeleted(int id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISampleServiceChannel : DuplexSample.DesktopClient.SampleServiceClient.ISampleService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SampleServiceClient : System.ServiceModel.DuplexClientBase<DuplexSample.DesktopClient.SampleServiceClient.ISampleService>, DuplexSample.DesktopClient.SampleServiceClient.ISampleService {
        
        public SampleServiceClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public SampleServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public SampleServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public SampleServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public SampleServiceClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public DuplexSample.DesktopClient.SampleServiceClient.OperationResultOfboolean Login(string userName, string password) {
            return base.Channel.Login(userName, password);
        }
        
        public System.Threading.Tasks.Task<DuplexSample.DesktopClient.SampleServiceClient.OperationResultOfboolean> LoginAsync(string userName, string password) {
            return base.Channel.LoginAsync(userName, password);
        }
        
        public void Logout() {
            base.Channel.Logout();
        }
        
        public System.Threading.Tasks.Task LogoutAsync() {
            return base.Channel.LogoutAsync();
        }
        
        public DuplexSample.DesktopClient.SampleServiceClient.OperationResultOfArrayOfProductYbTTycpx GetAllProducts() {
            return base.Channel.GetAllProducts();
        }
        
        public System.Threading.Tasks.Task<DuplexSample.DesktopClient.SampleServiceClient.OperationResultOfArrayOfProductYbTTycpx> GetAllProductsAsync() {
            return base.Channel.GetAllProductsAsync();
        }
        
        public DuplexSample.DesktopClient.SampleServiceClient.OperationResultOfProductYbTTycpx GetProduct(int id) {
            return base.Channel.GetProduct(id);
        }
        
        public System.Threading.Tasks.Task<DuplexSample.DesktopClient.SampleServiceClient.OperationResultOfProductYbTTycpx> GetProductAsync(int id) {
            return base.Channel.GetProductAsync(id);
        }
        
        public DuplexSample.DesktopClient.SampleServiceClient.OperationResultOfProductYbTTycpx AddProduct(DuplexSample.DesktopClient.SampleServiceClient.Product product) {
            return base.Channel.AddProduct(product);
        }
        
        public System.Threading.Tasks.Task<DuplexSample.DesktopClient.SampleServiceClient.OperationResultOfProductYbTTycpx> AddProductAsync(DuplexSample.DesktopClient.SampleServiceClient.Product product) {
            return base.Channel.AddProductAsync(product);
        }
        
        public DuplexSample.DesktopClient.SampleServiceClient.OperationResultOfProductYbTTycpx UpdateProduct(DuplexSample.DesktopClient.SampleServiceClient.Product product) {
            return base.Channel.UpdateProduct(product);
        }
        
        public System.Threading.Tasks.Task<DuplexSample.DesktopClient.SampleServiceClient.OperationResultOfProductYbTTycpx> UpdateProductAsync(DuplexSample.DesktopClient.SampleServiceClient.Product product) {
            return base.Channel.UpdateProductAsync(product);
        }
        
        public DuplexSample.DesktopClient.SampleServiceClient.OperationResultOfboolean RemoveProduct(int id) {
            return base.Channel.RemoveProduct(id);
        }
        
        public System.Threading.Tasks.Task<DuplexSample.DesktopClient.SampleServiceClient.OperationResultOfboolean> RemoveProductAsync(int id) {
            return base.Channel.RemoveProductAsync(id);
        }
    }
}
